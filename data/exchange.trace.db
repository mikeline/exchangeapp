2020-11-06 14:33:54 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Schema "EXCHANGE" not found; SQL statement:

    create table exchange.Security (
       id binary not null,
        date timestamp,
        instrument varchar(255) not null,
        price varchar(255) not null,
        primary key (id)
    ) [90079-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:576)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.command.Parser.getSchema(Parser.java:1194)
	at org.h2.command.Parser.getSchema(Parser.java:1200)
	at org.h2.command.Parser.parseCreateTable(Parser.java:8368)
	at org.h2.command.Parser.parseCreate(Parser.java:6276)
	at org.h2.command.Parser.parsePrepared(Parser.java:903)
	at org.h2.command.Parser.parse(Parser.java:843)
	at org.h2.command.Parser.parse(Parser.java:815)
	at org.h2.command.Parser.prepareCommand(Parser.java:738)
	at org.h2.engine.Session.prepareLocal(Session.java:657)
	at org.h2.engine.Session.prepareCommand(Session.java:595)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1235)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:212)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:201)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:54)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlString(AbstractSchemaMigrator.java:559)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlStrings(AbstractSchemaMigrator.java:504)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.createTable(AbstractSchemaMigrator.java:277)
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:71)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:207)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:114)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:184)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:73)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:320)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:462)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1249)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:58)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:391)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:378)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1790)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:594)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1109)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:869)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:551)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:143)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:758)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:750)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:405)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1237)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at com.example.exchangeapp.ExchangeAppApplication.main(ExchangeAppApplication.java:10)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
2020-11-06 14:35:49 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Schema "EXCHANGE" not found; SQL statement:

    create table exchange.Security (
       id binary not null,
        date timestamp,
        instrument varchar(255) not null,
        price varchar(255) not null,
        primary key (id)
    ) [90079-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:576)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.command.Parser.getSchema(Parser.java:1194)
	at org.h2.command.Parser.getSchema(Parser.java:1200)
	at org.h2.command.Parser.parseCreateTable(Parser.java:8368)
	at org.h2.command.Parser.parseCreate(Parser.java:6276)
	at org.h2.command.Parser.parsePrepared(Parser.java:903)
	at org.h2.command.Parser.parse(Parser.java:843)
	at org.h2.command.Parser.parse(Parser.java:815)
	at org.h2.command.Parser.prepareCommand(Parser.java:738)
	at org.h2.engine.Session.prepareLocal(Session.java:657)
	at org.h2.engine.Session.prepareCommand(Session.java:595)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1235)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:212)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:201)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:54)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlString(AbstractSchemaMigrator.java:559)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlStrings(AbstractSchemaMigrator.java:504)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.createTable(AbstractSchemaMigrator.java:277)
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:71)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:207)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:114)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:184)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:73)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:320)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:462)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1249)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:58)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:391)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:378)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1790)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:594)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1109)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:869)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:551)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:143)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:758)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:750)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:405)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1237)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at com.example.exchangeapp.ExchangeAppApplication.main(ExchangeAppApplication.java:10)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
2020-11-06 14:41:53 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "SECURITY" already exists; SQL statement:

    create table Security (
       id binary not null,
        date timestamp,
        instrument varchar(255) not null,
        price varchar(255) not null,
        primary key (id)
    ) [42101-200]
2020-11-06 14:43:32 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "SECURITY" already exists; SQL statement:

    create table Security (
       id binary not null,
        date timestamp,
        instrument varchar(255) not null,
        price varchar(255) not null,
        primary key (id)
    ) [42101-200]
2020-11-06 14:44:10 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "SECURITY" already exists; SQL statement:

    create table Security (
       id binary not null,
        date timestamp,
        instrument varchar(255) not null,
        price varchar(255) not null,
        primary key (id)
    ) [42101-200]
2020-11-06 14:45:55 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "SECURITY" already exists; SQL statement:

    create table Security (
       id binary not null,
        date timestamp,
        instrument varchar(255) not null,
        price varchar(255) not null,
        primary key (id)
    ) [42101-200]
2020-11-06 23:06:31 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "SECURITY" already exists; SQL statement:

    create table Security (
       id binary not null,
        date timestamp,
        instrument varchar(255) not null,
        price varchar(255) not null,
        primary key (id)
    ) [42101-200]
2020-11-06 23:14:05 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "SECURITY" already exists; SQL statement:

    create table Security (
       id binary not null,
        date timestamp,
        instrument varchar(255) not null,
        price varchar(255) not null,
        primary key (id)
    ) [42101-200]
2020-11-07 13:04:50 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "SECURITY" already exists; SQL statement:

    create table Security (
       id binary not null,
        date timestamp,
        instrument varchar(255) not null,
        price varchar(255) not null,
        primary key (id)
    ) [42101-200]
2020-11-07 13:12:04 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "SECURITY" already exists; SQL statement:

    create table Security (
       id binary not null,
        date timestamp,
        instrument varchar(255) not null,
        price varchar(255) not null,
        primary key (id)
    ) [42101-200]
2020-11-07 13:15:53 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "SECURITY" already exists; SQL statement:

    create table Security (
       id binary not null,
        date timestamp,
        instrument varchar(255) not null,
        price varchar(255) not null,
        primary key (id)
    ) [42101-200]
2020-11-07 13:18:01 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "SECURITY" already exists; SQL statement:

    create table Security (
       id binary not null,
        date timestamp,
        instrument varchar(255) not null,
        price varchar(255) not null,
        primary key (id)
    ) [42101-200]
2020-11-07 13:18:57 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "SECURITY" already exists; SQL statement:

    create table Security (
       id binary not null,
        date timestamp,
        instrument varchar(255) not null,
        price varchar(255) not null,
        primary key (id)
    ) [42101-200]
2020-11-07 13:20:14 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "SECURITY" already exists; SQL statement:

    create table Security (
       id binary not null,
        date timestamp,
        instrument varchar(255) not null,
        price varchar(255) not null,
        primary key (id)
    ) [42101-200]
2020-11-07 13:22:10 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "SECURITY" already exists; SQL statement:

    create table Security (
       id binary not null,
        date timestamp,
        instrument varchar(255) not null,
        price varchar(255) not null,
        primary key (id)
    ) [42101-200]
2020-11-08 15:54:17 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "SECURITY" already exists; SQL statement:

    create table Security (
       id binary not null,
        date timestamp,
        instrument varchar(255) not null,
        price varchar(255) not null,
        primary key (id)
    ) [42101-200]
2020-11-08 15:58:21 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "SECURITY" already exists; SQL statement:

    create table Security (
       id binary not null,
        date timestamp,
        instrument varchar(255) not null,
        price varchar(255) not null,
        primary key (id)
    ) [42101-200]
2020-11-09 19:11:32 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "SECURITY" already exists; SQL statement:

    create table Security (
       id binary not null,
        date timestamp,
        instrument varchar(255) not null,
        price varchar(255) not null,
        primary key (id)
    ) [42101-200]
2020-11-09 21:19:09 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "SECURITY" already exists; SQL statement:

    create table Security (
       id binary not null,
        date timestamp,
        instrument varchar(255) not null,
        price varchar(255) not null,
        primary key (id)
    ) [42101-200]
2020-11-09 21:25:05 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "SECURITY" already exists; SQL statement:

    create table Security (
       id binary not null,
        date timestamp,
        instrument varchar(255) not null,
        price varchar(255) not null,
        primary key (id)
    ) [42101-200]
2020-11-09 21:28:41 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "SECURITY" already exists; SQL statement:

    create table Security (
       id binary not null,
        date timestamp,
        instrument varchar(255) not null,
        price varchar(255) not null,
        primary key (id)
    ) [42101-200]
2020-11-09 21:35:16 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "SECURITY" already exists; SQL statement:

    create table Security (
       id binary not null,
        date timestamp,
        instrument varchar(255) not null,
        price varchar(255) not null,
        primary key (id)
    ) [42101-200]
2020-11-09 21:52:36 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "SECURITY" already exists; SQL statement:

    create table Security (
       id binary not null,
        date timestamp,
        instrument varchar(255) not null,
        price varchar(255) not null,
        primary key (id)
    ) [42101-200]
2020-11-09 21:58:58 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "SECURITY" already exists; SQL statement:

    create table Security (
       id binary not null,
        date timestamp,
        instrument varchar(255) not null,
        price varchar(255) not null,
        primary key (id)
    ) [42101-200]
2020-11-09 22:06:20 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "SECURITY" already exists; SQL statement:

    create table Security (
       id binary not null,
        date timestamp,
        instrument varchar(255) not null,
        price integer not null,
        primary key (id)
    ) [42101-200]
2020-11-09 22:09:01 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "SECURITY" already exists; SQL statement:

    create table Security (
       id binary not null,
        date timestamp,
        instrument varchar(255) not null,
        price integer not null,
        primary key (id)
    ) [42101-200]
2020-11-09 22:16:43 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "SECURITY" already exists; SQL statement:

    create table Security (
       id binary not null,
        date timestamp,
        instrument varchar(255) not null,
        price integer not null,
        primary key (id)
    ) [42101-200]
2020-11-09 22:17:51 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "SECURITY" already exists; SQL statement:

    create table Security (
       id binary not null,
        date timestamp,
        instrument varchar(255) not null,
        price integer not null,
        primary key (id)
    ) [42101-200]
2020-11-09 22:25:28 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "SECURITY" already exists; SQL statement:

    create table Security (
       id binary not null,
        date timestamp,
        instrument varchar(255) not null,
        price integer not null,
        primary key (id)
    ) [42101-200]
2020-11-09 22:30:05 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "SECURITY" already exists; SQL statement:

    create table Security (
       id binary not null,
        date timestamp,
        instrument varchar(255) not null,
        price integer not null,
        primary key (id)
    ) [42101-200]
2020-11-09 22:34:18 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "SECURITY" already exists; SQL statement:

    create table Security (
       id binary not null,
        date timestamp,
        instrument varchar(255) not null,
        price integer not null,
        primary key (id)
    ) [42101-200]
2020-11-09 22:39:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "SECURITY" already exists; SQL statement:

    create table Security (
       id binary not null,
        date timestamp,
        instrument varchar(255) not null,
        price integer not null,
        primary key (id)
    ) [42101-200]
2020-11-09 22:40:51 database: wrong user or password; user: "SA"
org.h2.message.DbException: Wrong user name or password [28000-200]
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.message.DbException.get(DbException.java:170)
	at org.h2.engine.Engine.openSession(Engine.java:131)
	at org.h2.engine.Engine.openSession(Engine.java:192)
	at org.h2.engine.Engine.createSessionAndValidate(Engine.java:171)
	at org.h2.engine.Engine.createSession(Engine.java:166)
	at org.h2.engine.Engine.createSession(Engine.java:29)
	at org.h2.engine.SessionRemote.connectEmbeddedOrServer(SessionRemote.java:340)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:173)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:152)
	at org.h2.Driver.connect(Driver.java:69)
	at org.h2.util.JdbcUtils.getConnection(JdbcUtils.java:309)
	at org.h2.util.JdbcUtils.getConnection(JdbcUtils.java:289)
	at org.h2.server.web.WebServer.getConnection(WebServer.java:785)
	at org.h2.server.web.WebApp.login(WebApp.java:1008)
	at org.h2.server.web.WebApp.process(WebApp.java:223)
	at org.h2.server.web.WebApp.processRequest(WebApp.java:173)
	at org.h2.server.web.WebServlet.doGet(WebServlet.java:129)
	at org.h2.server.web.WebServlet.doPost(WebServlet.java:166)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: org.h2.jdbc.JdbcSQLInvalidAuthorizationSpecException: Wrong user name or password [28000-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:461)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	... 55 more
2020-11-09 22:41:50 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "SECURITY" already exists; SQL statement:

    create table Security (
       id binary not null,
        date timestamp,
        instrument varchar(255) not null,
        price integer not null,
        primary key (id)
    ) [42101-200]
2020-11-09 22:42:15 database: wrong user or password; user: "SA"
org.h2.message.DbException: Wrong user name or password [28000-200]
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.message.DbException.get(DbException.java:170)
	at org.h2.engine.Engine.openSession(Engine.java:131)
	at org.h2.engine.Engine.openSession(Engine.java:192)
	at org.h2.engine.Engine.createSessionAndValidate(Engine.java:171)
	at org.h2.engine.Engine.createSession(Engine.java:166)
	at org.h2.engine.Engine.createSession(Engine.java:29)
	at org.h2.engine.SessionRemote.connectEmbeddedOrServer(SessionRemote.java:340)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:173)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:152)
	at org.h2.Driver.connect(Driver.java:69)
	at org.h2.util.JdbcUtils.getConnection(JdbcUtils.java:309)
	at org.h2.util.JdbcUtils.getConnection(JdbcUtils.java:289)
	at org.h2.server.web.WebServer.getConnection(WebServer.java:785)
	at org.h2.server.web.WebApp.login(WebApp.java:1008)
	at org.h2.server.web.WebApp.process(WebApp.java:223)
	at org.h2.server.web.WebApp.processRequest(WebApp.java:173)
	at org.h2.server.web.WebServlet.doGet(WebServlet.java:129)
	at org.h2.server.web.WebServlet.doPost(WebServlet.java:166)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: org.h2.jdbc.JdbcSQLInvalidAuthorizationSpecException: Wrong user name or password [28000-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:461)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	... 55 more
2020-11-09 22:48:16 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "SECURITY" already exists; SQL statement:

    create table Security (
       id binary not null,
        date timestamp,
        instrument varchar(255) not null,
        price integer not null,
        primary key (id)
    ) [42101-200]
2020-11-09 22:50:31 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "SECURITY" already exists; SQL statement:

    create table Security (
       id binary not null,
        date timestamp,
        instrument varchar(255) not null,
        price integer not null,
        primary key (id)
    ) [42101-200]
2020-11-09 23:19:09 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "SECURITY" already exists; SQL statement:

    create table Security (
       id binary not null,
        date timestamp,
        instrument varchar(255) not null,
        price integer not null,
        primary key (id)
    ) [42101-200]
2020-11-09 23:20:20 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "SECURITY" already exists; SQL statement:

    create table Security (
       id binary not null,
        date timestamp,
        instrument varchar(255) not null,
        price integer not null,
        primary key (id)
    ) [42101-200]
2020-11-10 13:01:22 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "SECURITY" already exists; SQL statement:

    create table Security (
       id bigint generated by default as identity,
        date timestamp,
        instrument varchar(255) not null,
        price integer not null,
        primary key (id)
    ) [42101-200]
2020-11-10 13:01:22 database: flush
org.h2.message.DbException: General error: "java.lang.IllegalStateException: The file is locked: nio:D:/Users/Misha/IdeaProjects/exchangeapp/data/exchange.mv.db [1.4.200/7]" [50000-200]
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convert(DbException.java:347)
	at org.h2.mvstore.db.MVTableEngine$1.uncaughtException(MVTableEngine.java:93)
	at org.h2.mvstore.MVStore.handleException(MVStore.java:2877)
	at org.h2.mvstore.MVStore.panic(MVStore.java:481)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:402)
	at org.h2.mvstore.MVStore$Builder.open(MVStore.java:3579)
	at org.h2.mvstore.db.MVTableEngine$Store.open(MVTableEngine.java:170)
	at org.h2.mvstore.db.MVTableEngine.init(MVTableEngine.java:103)
	at org.h2.engine.Database.getPageStore(Database.java:2659)
	at org.h2.engine.Database.open(Database.java:675)
	at org.h2.engine.Database.openDatabase(Database.java:307)
	at org.h2.engine.Database.<init>(Database.java:301)
	at org.h2.engine.Engine.openSession(Engine.java:74)
	at org.h2.engine.Engine.openSession(Engine.java:192)
	at org.h2.engine.Engine.createSessionAndValidate(Engine.java:171)
	at org.h2.engine.Engine.createSession(Engine.java:166)
	at org.h2.engine.Engine.createSession(Engine.java:29)
	at org.h2.engine.SessionRemote.connectEmbeddedOrServer(SessionRemote.java:340)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:173)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:152)
	at org.h2.Driver.connect(Driver.java:69)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:677)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:189)
	at org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriverManager(DriverManagerDataSource.java:155)
	at org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:146)
	at org.springframework.jdbc.datasource.AbstractDriverBasedDataSource.getConnectionFromDriver(AbstractDriverBasedDataSource.java:205)
	at org.springframework.jdbc.datasource.AbstractDriverBasedDataSource.getConnection(AbstractDriverBasedDataSource.java:169)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:180)
	at org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:43)
	at org.hibernate.tool.schema.internal.exec.ImprovedExtractionContextImpl.getJdbcConnection(ImprovedExtractionContextImpl.java:60)
	at org.hibernate.tool.schema.extract.internal.SequenceInformationExtractorLegacyImpl.extractMetadata(SequenceInformationExtractorLegacyImpl.java:40)
	at org.hibernate.tool.schema.extract.internal.DatabaseInformationImpl.initializeSequences(DatabaseInformationImpl.java:65)
	at org.hibernate.tool.schema.extract.internal.DatabaseInformationImpl.<init>(DatabaseInformationImpl.java:59)
	at org.hibernate.tool.schema.internal.Helper.buildDatabaseInformation(Helper.java:155)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:96)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:184)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:73)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:320)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:462)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1249)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:58)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:391)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:378)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1790)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:594)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1109)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:869)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:551)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:143)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:758)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:750)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:405)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1237)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at com.example.exchangeapp.ExchangeAppApplication.main(ExchangeAppApplication.java:12)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.h2.jdbc.JdbcSQLNonTransientException: General error: "java.lang.IllegalStateException: The file is locked: nio:D:/Users/Misha/IdeaProjects/exchangeapp/data/exchange.mv.db [1.4.200/7]" [50000-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	... 71 more
Caused by: java.lang.IllegalStateException: The file is locked: nio:D:/Users/Misha/IdeaProjects/exchangeapp/data/exchange.mv.db [1.4.200/7]
	at org.h2.mvstore.DataUtils.newIllegalStateException(DataUtils.java:950)
	at org.h2.mvstore.FileStore.open(FileStore.java:172)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:381)
	... 65 more
2020-11-10 13:02:11 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "SECURITY" already exists; SQL statement:

    create table Security (
       id bigint generated by default as identity,
        date timestamp,
        instrument varchar(255) not null,
        price integer not null,
        primary key (id)
    ) [42101-200]
2020-11-10 13:04:33 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "SECURITY" already exists; SQL statement:

    create table Security (
       id bigint generated by default as identity,
        date timestamp,
        instrument varchar(255) not null,
        price integer not null,
        primary key (id)
    ) [42101-200]
2020-11-10 13:32:07 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "SECURITY" already exists; SQL statement:

    create table Security (
       id bigint generated by default as identity,
        date timestamp,
        instrument varchar(255) not null,
        price integer not null,
        primary key (id)
    ) [42101-200]
2020-11-10 13:34:35 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "SECURITY" already exists; SQL statement:

    create table Security (
       id bigint generated by default as identity,
        date timestamp,
        instrument varchar(255) not null,
        price integer not null,
        primary key (id)
    ) [42101-200]
2020-11-10 13:49:02 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "SECURITY" already exists; SQL statement:

    create table Security (
       id bigint generated by default as identity,
        date timestamp,
        instrument varchar(255) not null,
        price integer not null,
        primary key (id)
    ) [42101-200]
2020-11-10 13:54:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "SECURITY" already exists; SQL statement:

    create table Security (
       id bigint generated by default as identity,
        date timestamp,
        instrument varchar(255) not null,
        price integer not null,
        primary key (id)
    ) [42101-200]
2020-11-10 13:59:05 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "SECURITY" already exists; SQL statement:

    create table Security (
       id bigint generated by default as identity,
        date timestamp,
        instrument varchar(255) not null,
        price integer not null,
        primary key (id)
    ) [42101-200]
2020-11-10 14:00:51 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "SECURITY" already exists; SQL statement:

    create table Security (
       id bigint generated by default as identity,
        date timestamp,
        instrument varchar(255) not null,
        price integer not null,
        primary key (id)
    ) [42101-200]
2020-11-10 14:07:48 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "SECURITY" already exists; SQL statement:

    create table Security (
       id bigint generated by default as identity,
        date timestamp,
        instrument varchar(255) not null,
        price integer not null,
        primary key (id)
    ) [42101-200]
2020-11-10 14:09:05 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "SECURITY" already exists; SQL statement:

    create table Security (
       id bigint generated by default as identity,
        date timestamp,
        instrument varchar(255) not null,
        price integer not null,
        primary key (id)
    ) [42101-200]
2020-11-10 14:21:10 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "SECURITY" already exists; SQL statement:

    create table Security (
       id bigint generated by default as identity,
        date timestamp,
        instrument varchar(255) not null,
        price integer not null,
        primary key (id)
    ) [42101-200]
2020-11-10 14:23:11 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "SECURITY" already exists; SQL statement:

    create table Security (
       id bigint generated by default as identity,
        date timestamp,
        instrument varchar(255) not null,
        price integer not null,
        primary key (id)
    ) [42101-200]
2020-11-10 14:25:13 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "SECURITY" already exists; SQL statement:

    create table Security (
       id bigint generated by default as identity,
        date timestamp,
        instrument varchar(255) not null,
        price integer not null,
        primary key (id)
    ) [42101-200]
2020-11-10 14:26:01 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "SECURITY" already exists; SQL statement:

    create table Security (
       id bigint generated by default as identity,
        date timestamp,
        instrument varchar(255) not null,
        price integer not null,
        primary key (id)
    ) [42101-200]
2020-11-10 14:26:39 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "SECURITY" already exists; SQL statement:

    create table Security (
       id bigint generated by default as identity,
        date timestamp,
        instrument varchar(255) not null,
        price integer not null,
        primary key (id)
    ) [42101-200]
2020-11-10 14:28:57 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "SECURITY" already exists; SQL statement:

    create table Security (
       id bigint generated by default as identity,
        date timestamp,
        instrument varchar(255) not null,
        price integer not null,
        primary key (id)
    ) [42101-200]
2020-11-10 14:30:53 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "SECURITY" already exists; SQL statement:

    create table Security (
       id bigint generated by default as identity,
        date timestamp,
        instrument varchar(255) not null,
        price integer not null,
        primary key (id)
    ) [42101-200]
2020-11-10 14:33:31 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "SECURITY" already exists; SQL statement:

    create table Security (
       id bigint generated by default as identity,
        date timestamp,
        instrument varchar(255) not null,
        price integer not null,
        primary key (id)
    ) [42101-200]
2020-11-10 15:25:09 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "SECURITY" already exists; SQL statement:

    create table Security (
       id bigint generated by default as identity,
        date timestamp,
        instrument varchar(255) not null,
        price integer not null,
        primary key (id)
    ) [42101-200]
2020-11-10 15:32:52 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "SECURITY" already exists; SQL statement:

    create table Security (
       id bigint generated by default as identity,
        date timestamp,
        instrument varchar(255) not null,
        price integer not null,
        primary key (id)
    ) [42101-200]
2020-11-10 15:34:17 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "SECURITY" already exists; SQL statement:

    create table Security (
       id bigint generated by default as identity,
        date timestamp,
        instrument varchar(255) not null,
        price integer not null,
        primary key (id)
    ) [42101-200]
2020-11-10 15:36:05 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "SECURITY" already exists; SQL statement:

    create table Security (
       id bigint generated by default as identity,
        date timestamp,
        instrument varchar(255) not null,
        price integer not null,
        primary key (id)
    ) [42101-200]
2020-11-10 15:38:53 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "SECURITY" already exists; SQL statement:

    create table Security (
       id bigint generated by default as identity,
        date timestamp,
        instrument varchar(255) not null,
        price integer not null,
        primary key (id)
    ) [42101-200]
2020-11-10 16:18:38 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "SECURITY" already exists; SQL statement:

    create table Security (
       id bigint generated by default as identity,
        date timestamp,
        instrument varchar(255) not null,
        price integer not null,
        primary key (id)
    ) [42101-200]
2020-11-10 16:25:31 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "SECURITY" already exists; SQL statement:

    create table Security (
       id bigint generated by default as identity,
        date timestamp,
        instrument varchar(255) not null,
        price integer not null,
        primary key (id)
    ) [42101-200]
2020-11-10 16:27:16 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "SECURITY" already exists; SQL statement:

    create table Security (
       id bigint generated by default as identity,
        date timestamp,
        instrument varchar(255) not null,
        price integer not null,
        primary key (id)
    ) [42101-200]
2020-11-10 17:23:10 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "SECURITY" already exists; SQL statement:

    create table Security (
       id bigint generated by default as identity,
        date timestamp,
        instrument varchar(255) not null,
        price integer not null,
        primary key (id)
    ) [42101-200]
2020-11-10 17:26:48 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "SECURITY" already exists; SQL statement:

    create table Security (
       id bigint generated by default as identity,
        date timestamp,
        instrument varchar(255) not null,
        price integer not null,
        primary key (id)
    ) [42101-200]
2020-11-10 17:31:44 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "SECURITY" already exists; SQL statement:

    create table Security (
       id bigint generated by default as identity,
        date timestamp,
        instrument varchar(255) not null,
        price integer not null,
        primary key (id)
    ) [42101-200]
2020-11-10 17:32:59 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "SECURITY" already exists; SQL statement:

    create table Security (
       id bigint generated by default as identity,
        date timestamp,
        instrument varchar(255) not null,
        price integer not null,
        primary key (id)
    ) [42101-200]
2020-11-10 17:34:40 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "SECURITY" already exists; SQL statement:

    create table Security (
       id bigint generated by default as identity,
        date timestamp,
        instrument varchar(255) not null,
        price integer not null,
        primary key (id)
    ) [42101-200]
2020-11-10 17:38:05 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "SECURITY" already exists; SQL statement:

    create table Security (
       id bigint generated by default as identity,
        date timestamp,
        instrument varchar(255) not null,
        price integer not null,
        primary key (id)
    ) [42101-200]
2020-11-10 18:24:41 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "SECURITY" already exists; SQL statement:

    create table Security (
       id bigint generated by default as identity,
        date timestamp,
        instrument varchar(255) not null,
        price integer not null,
        primary key (id)
    ) [42101-200]
2020-11-10 19:15:56 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "SECURITY" already exists; SQL statement:

    create table Security (
       id bigint generated by default as identity,
        date timestamp,
        instrument varchar(255) not null,
        price integer not null,
        primary key (id)
    ) [42101-200]
2020-11-10 19:24:36 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "SECURITY" already exists; SQL statement:

    create table Security (
       id bigint generated by default as identity,
        date timestamp,
        instrument varchar(255) not null,
        price integer not null,
        primary key (id)
    ) [42101-200]
2020-11-10 19:32:25 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "SECURITY" already exists; SQL statement:

    create table Security (
       id bigint generated by default as identity,
        date timestamp,
        instrument varchar(255) not null,
        price integer not null,
        primary key (id)
    ) [42101-200]
2020-11-10 19:46:49 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "SECURITY" already exists; SQL statement:

    create table Security (
       id bigint generated by default as identity,
        date timestamp,
        instrument varchar(255) not null,
        price integer not null,
        primary key (id)
    ) [42101-200]
2020-11-10 19:49:01 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "SECURITY" already exists; SQL statement:

    create table Security (
       id bigint generated by default as identity,
        date timestamp,
        instrument varchar(255) not null,
        price integer not null,
        primary key (id)
    ) [42101-200]
2020-11-10 19:51:06 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "SECURITY" already exists; SQL statement:

    create table Security (
       id bigint generated by default as identity,
        date timestamp,
        instrument varchar(255) not null,
        price integer not null,
        primary key (id)
    ) [42101-200]
2020-11-10 20:01:40 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "SECURITY" already exists; SQL statement:

    create table Security (
       id bigint generated by default as identity,
        date timestamp,
        instrument varchar(255) not null,
        price integer not null,
        primary key (id)
    ) [42101-200]
2020-11-10 20:10:19 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "SECURITY" already exists; SQL statement:

    create table Security (
       id bigint generated by default as identity,
        date timestamp,
        instrument varchar(255) not null,
        price integer not null,
        primary key (id)
    ) [42101-200]
2020-11-10 20:14:37 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "SECURITY" already exists; SQL statement:

    create table Security (
       id bigint generated by default as identity,
        date timestamp,
        instrument varchar(255) not null,
        price integer not null,
        primary key (id)
    ) [42101-200]
2020-11-10 21:02:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "SECURITY" already exists; SQL statement:

    create table Security (
       id bigint generated by default as identity,
        date timestamp,
        instrument varchar(255) not null,
        price integer not null,
        primary key (id)
    ) [42101-200]
2020-11-10 21:06:07 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "SECURITY" already exists; SQL statement:

    create table Security (
       id bigint generated by default as identity,
        date timestamp,
        instrument varchar(255) not null,
        price integer not null,
        primary key (id)
    ) [42101-200]
2020-11-10 21:12:41 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "SECURITY" already exists; SQL statement:

    create table Security (
       id bigint generated by default as identity,
        date timestamp,
        instrument varchar(255) not null,
        price integer not null,
        primary key (id)
    ) [42101-200]
2020-11-10 21:13:52 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "SECURITY" already exists; SQL statement:

    create table Security (
       id bigint generated by default as identity,
        date timestamp,
        instrument varchar(255) not null,
        price integer not null,
        primary key (id)
    ) [42101-200]
2020-11-10 21:16:26 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "SECURITY" already exists; SQL statement:

    create table Security (
       id bigint generated by default as identity,
        date timestamp,
        instrument varchar(255) not null,
        price integer not null,
        primary key (id)
    ) [42101-200]
2020-11-10 21:24:52 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "SECURITY" already exists; SQL statement:

    create table Security (
       id bigint generated by default as identity,
        date timestamp,
        instrument varchar(255) not null,
        price integer not null,
        primary key (id)
    ) [42101-200]
2020-11-10 21:27:18 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "SECURITY" already exists; SQL statement:

    create table Security (
       id bigint generated by default as identity,
        date timestamp,
        instrument varchar(255) not null,
        price integer not null,
        primary key (id)
    ) [42101-200]
2020-11-10 21:28:35 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "SECURITY" already exists; SQL statement:

    create table Security (
       id bigint generated by default as identity,
        date timestamp,
        instrument varchar(255) not null,
        price integer not null,
        primary key (id)
    ) [42101-200]
2020-11-10 21:33:52 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "SECURITY" already exists; SQL statement:

    create table Security (
       id bigint generated by default as identity,
        date timestamp,
        instrument varchar(255) not null,
        price integer not null,
        primary key (id)
    ) [42101-200]
2020-11-10 22:42:29 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "SECURITY" already exists; SQL statement:

    create table Security (
       id bigint generated by default as identity,
        date timestamp,
        instrument varchar(255) not null,
        price integer not null,
        primary key (id)
    ) [42101-200]
2020-11-10 22:46:52 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "SECURITY" already exists; SQL statement:

    create table Security (
       id bigint generated by default as identity,
        date timestamp,
        instrument varchar(255) not null,
        price integer not null,
        primary key (id)
    ) [42101-200]
2020-11-10 22:48:43 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "SECURITY" already exists; SQL statement:

    create table Security (
       id bigint generated by default as identity,
        date timestamp,
        instrument varchar(255) not null,
        price integer not null,
        primary key (id)
    ) [42101-200]
2020-11-10 22:51:11 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "SECURITY" already exists; SQL statement:

    create table Security (
       id bigint generated by default as identity,
        date timestamp,
        instrument varchar(255) not null,
        price integer not null,
        primary key (id)
    ) [42101-200]
2020-11-10 22:52:45 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "SECURITY" already exists; SQL statement:

    create table Security (
       id bigint generated by default as identity,
        date timestamp,
        instrument varchar(255) not null,
        price integer not null,
        primary key (id)
    ) [42101-200]
2020-11-10 22:54:39 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "SECURITY" already exists; SQL statement:

    create table Security (
       id bigint generated by default as identity,
        date timestamp,
        instrument varchar(255) not null,
        price integer not null,
        primary key (id)
    ) [42101-200]
2020-11-10 22:58:16 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "SECURITY" already exists; SQL statement:

    create table Security (
       id bigint generated by default as identity,
        date timestamp,
        instrument varchar(255) not null,
        price integer not null,
        primary key (id)
    ) [42101-200]
2020-11-10 23:02:11 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "SECURITY" already exists; SQL statement:

    create table Security (
       id bigint generated by default as identity,
        date timestamp,
        instrument varchar(255) not null,
        price integer not null,
        primary key (id)
    ) [42101-200]
2020-11-10 23:04:11 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "SECURITY" already exists; SQL statement:

    create table Security (
       id bigint generated by default as identity,
        date timestamp,
        instrument varchar(255) not null,
        price integer not null,
        primary key (id)
    ) [42101-200]
2020-11-10 23:05:43 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "SECURITY" already exists; SQL statement:

    create table Security (
       id bigint generated by default as identity,
        date timestamp,
        instrument varchar(255) not null,
        price integer not null,
        primary key (id)
    ) [42101-200]
2020-11-10 23:12:44 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "SECURITY" already exists; SQL statement:

    create table Security (
       id bigint generated by default as identity,
        date timestamp,
        instrument varchar(255) not null,
        price integer not null,
        primary key (id)
    ) [42101-200]
2020-11-10 23:14:03 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "SECURITY" already exists; SQL statement:

    create table Security (
       id bigint generated by default as identity,
        date timestamp,
        instrument varchar(255) not null,
        price integer not null,
        primary key (id)
    ) [42101-200]
2020-11-10 23:15:25 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "SECURITY" already exists; SQL statement:

    create table Security (
       id bigint generated by default as identity,
        date timestamp,
        instrument varchar(255) not null,
        price integer not null,
        primary key (id)
    ) [42101-200]
2020-11-10 23:18:24 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "SECURITY" already exists; SQL statement:

    create table Security (
       id bigint generated by default as identity,
        date timestamp,
        instrument varchar(255) not null,
        price integer not null,
        primary key (id)
    ) [42101-200]
2020-11-10 23:20:16 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "SECURITY" already exists; SQL statement:

    create table Security (
       id bigint generated by default as identity,
        date timestamp,
        instrument varchar(255) not null,
        price integer not null,
        primary key (id)
    ) [42101-200]
2020-11-10 23:22:42 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "SECURITY" already exists; SQL statement:

    create table Security (
       id bigint generated by default as identity,
        date timestamp,
        instrument varchar(255) not null,
        price integer not null,
        primary key (id)
    ) [42101-200]
2020-11-10 23:29:33 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "SECURITY" already exists; SQL statement:

    create table Security (
       id bigint generated by default as identity,
        date timestamp,
        instrument varchar(255) not null,
        price integer not null,
        primary key (id)
    ) [42101-200]
2020-11-10 23:31:36 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "SECURITY" already exists; SQL statement:

    create table Security (
       id bigint generated by default as identity,
        date timestamp,
        instrument varchar(255) not null,
        price integer not null,
        primary key (id)
    ) [42101-200]
2020-11-10 23:36:26 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "SECURITY" already exists; SQL statement:

    create table Security (
       id bigint generated by default as identity,
        date timestamp,
        instrument varchar(255) not null,
        price integer not null,
        primary key (id)
    ) [42101-200]
2020-11-11 14:23:59 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "SECURITY" already exists; SQL statement:

    create table Security (
       id bigint generated by default as identity,
        date timestamp,
        instrument varchar(255) not null,
        price integer not null,
        primary key (id)
    ) [42101-200]
2020-11-11 14:26:04 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "SECURITY" already exists; SQL statement:

    create table Security (
       id bigint generated by default as identity,
        date timestamp,
        instrument varchar(255) not null,
        price integer not null,
        primary key (id)
    ) [42101-200]
2020-11-11 14:27:43 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "SECURITY" already exists; SQL statement:

    create table Security (
       id bigint generated by default as identity,
        date timestamp,
        instrument varchar(255) not null,
        price integer not null,
        primary key (id)
    ) [42101-200]
2020-11-11 14:29:49 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "SECURITY" already exists; SQL statement:

    create table Security (
       id bigint generated by default as identity,
        date timestamp,
        instrument varchar(255) not null,
        price integer not null,
        primary key (id)
    ) [42101-200]
2020-11-11 14:36:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "SECURITY" already exists; SQL statement:

    create table Security (
       id bigint generated by default as identity,
        date timestamp,
        instrument varchar(255) not null,
        price integer not null,
        primary key (id)
    ) [42101-200]
2020-11-11 14:37:25 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "SECURITY" already exists; SQL statement:

    create table Security (
       id bigint generated by default as identity,
        date timestamp,
        instrument varchar(255) not null,
        price integer not null,
        primary key (id)
    ) [42101-200]
2020-11-11 14:39:07 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "SECURITY" already exists; SQL statement:

    create table Security (
       id bigint generated by default as identity,
        date timestamp,
        instrument varchar(255) not null,
        price integer not null,
        primary key (id)
    ) [42101-200]
2020-11-11 14:41:31 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "SECURITY" already exists; SQL statement:

    create table Security (
       id bigint generated by default as identity,
        date timestamp,
        instrument varchar(255) not null,
        price integer not null,
        primary key (id)
    ) [42101-200]
2020-11-11 14:42:37 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "SECURITY" already exists; SQL statement:

    create table Security (
       id bigint generated by default as identity,
        date timestamp,
        instrument varchar(255) not null,
        price integer not null,
        primary key (id)
    ) [42101-200]
2020-11-11 14:45:01 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "SECURITY" already exists; SQL statement:

    create table Security (
       id bigint generated by default as identity,
        date timestamp,
        instrument varchar(255) not null,
        price integer not null,
        primary key (id)
    ) [42101-200]
2020-11-11 14:49:03 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "SECURITY" already exists; SQL statement:

    create table Security (
       id bigint generated by default as identity,
        date timestamp,
        instrument varchar(255) not null,
        price integer not null,
        primary key (id)
    ) [42101-200]
2020-11-11 14:58:56 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "SECURITY" already exists; SQL statement:

    create table Security (
       id bigint generated by default as identity,
        date timestamp,
        instrument varchar(255) not null,
        price integer not null,
        primary key (id)
    ) [42101-200]
2020-11-11 15:00:10 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "SECURITY" already exists; SQL statement:

    create table Security (
       id bigint generated by default as identity,
        date timestamp,
        instrument varchar(255) not null,
        price integer not null,
        primary key (id)
    ) [42101-200]
2020-11-11 15:04:04 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "SECURITY" already exists; SQL statement:

    create table Security (
       id bigint generated by default as identity,
        date timestamp,
        instrument varchar(255) not null,
        price integer not null,
        primary key (id)
    ) [42101-200]
2020-11-11 16:11:44 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "SECURITY" already exists; SQL statement:

    create table Security (
       id bigint generated by default as identity,
        date timestamp,
        instrument varchar(255) not null,
        price integer not null,
        primary key (id)
    ) [42101-200]
2020-11-11 16:17:37 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "SECURITY" already exists; SQL statement:

    create table Security (
       id bigint generated by default as identity,
        date timestamp,
        instrument varchar(255) not null,
        price integer not null,
        primary key (id)
    ) [42101-200]
2020-11-11 16:20:28 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "SECURITY" already exists; SQL statement:

    create table Security (
       id bigint generated by default as identity,
        date timestamp,
        instrument varchar(255) not null,
        price integer not null,
        primary key (id)
    ) [42101-200]
2020-11-11 16:24:23 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "SECURITY" already exists; SQL statement:

    create table Security (
       id bigint generated by default as identity,
        date timestamp,
        instrument varchar(255) not null,
        price integer not null,
        primary key (id)
    ) [42101-200]
2020-11-11 16:27:12 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "SECURITY" already exists; SQL statement:

    create table Security (
       id bigint generated by default as identity,
        date timestamp,
        instrument varchar(255) not null,
        price integer not null,
        primary key (id)
    ) [42101-200]
2020-11-11 16:29:30 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "SECURITY" already exists; SQL statement:

    create table Security (
       id bigint generated by default as identity,
        date timestamp,
        instrument varchar(255) not null,
        price integer not null,
        primary key (id)
    ) [42101-200]
2020-11-11 16:31:33 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "SECURITY" already exists; SQL statement:

    create table Security (
       id bigint generated by default as identity,
        date timestamp,
        instrument varchar(255) not null,
        price integer not null,
        primary key (id)
    ) [42101-200]
2020-11-11 16:34:01 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "SECURITY" already exists; SQL statement:

    create table Security (
       id bigint generated by default as identity,
        date timestamp,
        instrument varchar(255) not null,
        price integer not null,
        primary key (id)
    ) [42101-200]
2020-11-11 16:35:17 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "SECURITY" already exists; SQL statement:

    create table Security (
       id bigint generated by default as identity,
        date timestamp,
        instrument varchar(255) not null,
        price integer not null,
        primary key (id)
    ) [42101-200]
2020-11-11 16:39:13 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "SECURITY" already exists; SQL statement:

    create table Security (
       id bigint generated by default as identity,
        date timestamp,
        instrument varchar(255) not null,
        price integer not null,
        primary key (id)
    ) [42101-200]
2020-11-11 16:40:20 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "SECURITY" already exists; SQL statement:

    create table Security (
       id bigint generated by default as identity,
        date timestamp,
        instrument varchar(255) not null,
        price integer not null,
        primary key (id)
    ) [42101-200]
2020-11-11 16:46:16 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "SECURITY" already exists; SQL statement:

    create table Security (
       id bigint generated by default as identity,
        date timestamp,
        instrument varchar(255) not null,
        price integer not null,
        primary key (id)
    ) [42101-200]
2020-11-11 16:47:18 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "SECURITY" already exists; SQL statement:

    create table Security (
       id bigint generated by default as identity,
        date timestamp,
        instrument varchar(255) not null,
        price integer not null,
        primary key (id)
    ) [42101-200]
2020-11-11 16:57:20 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "SECURITY" already exists; SQL statement:

    create table Security (
       id bigint generated by default as identity,
        date timestamp,
        instrument varchar(255) not null,
        price integer not null,
        primary key (id)
    ) [42101-200]
2020-11-11 16:59:52 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "SECURITY" already exists; SQL statement:

    create table Security (
       id bigint generated by default as identity,
        date timestamp,
        instrument varchar(255) not null,
        price integer not null,
        primary key (id)
    ) [42101-200]
2020-11-11 17:04:05 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "SECURITY" already exists; SQL statement:

    create table Security (
       id bigint generated by default as identity,
        date timestamp,
        instrument varchar(255) not null,
        price integer not null,
        primary key (id)
    ) [42101-200]
2020-11-11 17:08:59 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "SECURITY" already exists; SQL statement:

    create table Security (
       id bigint generated by default as identity,
        date timestamp,
        instrument varchar(255) not null,
        price integer not null,
        primary key (id)
    ) [42101-200]
2020-11-11 17:11:25 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "SECURITY" already exists; SQL statement:

    create table Security (
       id bigint generated by default as identity,
        date timestamp,
        instrument varchar(255) not null,
        price integer not null,
        primary key (id)
    ) [42101-200]
2020-11-11 17:13:52 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "SECURITY" already exists; SQL statement:

    create table Security (
       id bigint generated by default as identity,
        date timestamp,
        instrument varchar(255) not null,
        price integer not null,
        primary key (id)
    ) [42101-200]
2020-11-11 17:15:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "SECURITY" already exists; SQL statement:

    create table Security (
       id bigint generated by default as identity,
        date timestamp,
        instrument varchar(255) not null,
        price integer not null,
        primary key (id)
    ) [42101-200]
2020-11-11 17:26:08 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "SECURITY" already exists; SQL statement:

    create table Security (
       id bigint generated by default as identity,
        date timestamp,
        instrument varchar(255) not null,
        price integer not null,
        primary key (id)
    ) [42101-200]
